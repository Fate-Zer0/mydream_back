<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mydream_back.dao.UserDAO">

    <insert id="addUser" parameterType="com.example.mydream_back.model.User">
        insert into tb_user (user_name,user_pw,createtime) values ( #{user_name} , #{user_pw} ,#{createtime}) ;
    </insert>

    <select id="getUsers" parameterType="com.example.mydream_back.model.User" resultMap="user">
        select u.user_id,u.user_name,ui.img_path,ui.img_name from tb_user u
        left join tb_user_img ui on u.user_id = ui.user_id and ui.img_type = '10001'
        <where>
            <if test="user_id != null">
                AND  u.user_id = #{user_id}
            </if>
            <if test="user_name != null">
                AND  u.user_name = #{user_name}
            </if>
            <if test="user_pw != null">
                AND  u.user_pw = #{user_pw}
            </if>
        </where>
    </select>

    <select id="getUserCountByUsername" resultType="int">
        select count(*) from tb_user u where u.user_name = #{user_name}
    </select>

    <select id="getConsecutiveSignInDays" resultType="int">
        SELECT COUNT(*) AS current_streak
        FROM (
            SELECT
            signin_date,
            DATE_SUB(signin_date, INTERVAL ROW_NUMBER() OVER (ORDER BY signin_date DESC) DAY) AS grp
            FROM tb_user_signin
            WHERE user_id = #{userId}
            AND signin_date &lt;= CURDATE()
        ) AS grouped
        WHERE grp = (
            SELECT grp
            FROM (
                SELECT
                DATE_SUB(signin_date, INTERVAL ROW_NUMBER() OVER (ORDER BY signin_date DESC) DAY) AS grp
                FROM tb_user_signin
                WHERE user_id = #{userId}
                AND signin_date &lt;= CURDATE()
                ORDER BY signin_date DESC
                LIMIT 1
            ) AS latest
        )
    </select>

    <select id="getSignInCount" resultType="int">
        SELECT
            COUNT(*)
        FROM tb_user_signin
        WHERE user_id = #{userId}
    </select>

    <insert id="signInToday">
        INSERT INTO tb_user_signin (user_id, signin_date)
        VALUES (#{userId}, CURDATE())
        ON DUPLICATE KEY UPDATE
            updated_at = CURRENT_TIMESTAMP
    </insert>

    <select id="isSignedToday" resultType="map">
        SELECT EXISTS (
            SELECT 1
            FROM tb_user_signin
            WHERE user_id = #{userId}
              AND signin_date = CURDATE()
        ) AS is_signed_today;
    </select>

    <select id="getContinuousSignInDays" resultType="int">
        WITH RECURSIVE consecutive_days AS (
            -- 找出最近的一次签到
            SELECT signin_date, 1 AS streak_length
            FROM tb_user_signin
            WHERE user_id = #{userId} AND signin_date = (
                SELECT MAX(signin_date)
                FROM tb_user_signin
                WHERE user_id = #{userId}
            )

            UNION ALL

            SELECT t.signin_date, cd.streak_length + 1
            FROM tb_user_signin t
                     INNER JOIN consecutive_days cd ON t.user_id = #{userId} AND t.signin_date = SUBDATE(cd.signin_date, 1)
        )
        SELECT IFNULL(MAX(streak_length), 0) AS current_consecutive_days
        FROM consecutive_days;
    </select>

    <select id="getSignInDatesByYearAndMonth" resultType="string">
        SELECT signin_date AS signin_date_str
        FROM tb_user_signin
        WHERE user_id = #{userId}
          AND YEAR(signin_date) = #{year}
          AND MONTH(signin_date) &lt;= #{maxMonth}
          AND MONTH(signin_date) &gt;= #{minMonth}
        ORDER BY signin_date ASC
    </select>

    <resultMap id="user" type="com.example.mydream_back.model.User">
        <result property="user_id" column="user_id"/>
        <result property="user_name" column="user_name"/>
        <result property="user_pw" column="user_pw"/>
        <result property="user_img.file_path" column="img_path"/>
        <result property="user_img.file_name" column="img_name"/>
    </resultMap>

    <select id="getUserInfoByUserId" resultMap="userInfo">
        SELECT u.user_id,u.user_name,u.createtime,
               im.img_path,im.img_name,
               i.user_sex,d.dic_name user_sex_name,i.user_grjj,i.user_points,
               s.user_status,d1.dic_name user_status_name,s.status_time
        FROM tb_user u
                 left join tb_user_img im on u.user_id = im.user_id and im.img_type = '10001'
                 left join tb_user_info i on u.user_id = i.user_id
                 left join tb_dictionary d on d.dic_id = i.user_sex
                 left join tb_user_status s on u.user_id = s.user_id
                 left join tb_dictionary d1 on d1.dic_id = s.user_status
        where u.user_id = #{userId}
    </select>

    <update id="updateUser" parameterType="com.example.mydream_back.dto.UserDTO">
        update tb_user
            <set>
                <if test="user_name != null">
                    user_name = #{user_name},
                </if>
                <if test="user_pw != null">
                    user_pw = #{user_pw},
                </if>
            </set>
        where user_id = #{user_id}
    </update>

    <update id="updateUserPassword" parameterType="com.example.mydream_back.model.User">
        update tb_user set user_pw = #{user_pw} where user_name = #{user_name}
    </update>

    <update id="updateUserInfo" parameterType="com.example.mydream_back.dto.UserInfo">
        update tb_user_info
            <set>
                <if test="user_sex_code != null">
                    user_sex = #{user_sex_code},
                </if>
                <if test="user_grjj != null">
                    user_grjj = #{user_grjj},
                </if>
                <if test="user_points != null">
                    user_points = #{user_points},
                </if>
            </set>
        where user_id = #{user.user_id}
    </update>

    <insert id="addUserInfo" parameterType="com.example.mydream_back.dto.UserInfo">
        insert into tb_user_info (user_id,user_sex,user_grjj,user_points)
        values (#{user.user_id},#{user_sex_code},#{user_grjj},#{user_points})
    </insert>

    <resultMap id="userInfo" type="com.example.mydream_back.dto.UserInfo">
        <result property="user.user_id" column="user_id"/>
        <result property="user.user_name" column="user_name"/>
        <result property="user.user_img.file_path" column="img_path"/>
        <result property="user.user_img.file_name" column="img_name"/>
        <result property="user_sex_code" column="user_sex"/>
        <result property="user_sex_name" column="user_sex_name"/>
        <result property="user_status_code" column="user_status"/>
        <result property="user_status_name" column="user_status_name"/>
        <result property="user_grjj" column="user_grjj"/>
        <result property="user_points" column="user_points"/>
        <result property="user_create_date" column="createtime"/>
        <result property="last_sign_in_date" column="status_time"/>
    </resultMap>

    <insert id="InsertUserFile" parameterType="com.example.mydream_back.dto.UserDTO">
        insert into tb_user_img (user_id,img_name,img_path,img_type) values ( #{user_id} , #{user_img.file_name} , #{user_img.file_path} , #{user_img.file_type}) ;
    </insert>

    <update id="updateUserFile" parameterType="com.example.mydream_back.dto.UserDTO">
        update tb_user_img set img_name = convert(#{user_img.file_name} using latin1) , img_path = #{user_img.file_path}  where user_id = #{user_id} and img_type = #{user_img.file_type};
    </update>

    <insert id="addSecQuestion" parameterType="com.example.mydream_back.dto.SecurityQuestion">
        insert into tb_user_secquestion (user_id,question,answer,createtime,state) values (#{user.user_id},#{question},#{answer},#{createtime},#{state});
    </insert>

    <update id="updateSecQuestion" parameterType="com.example.mydream_back.dto.SecurityQuestion">
        update tb_user_secquestion
            <set>
                <if test="question != null">
                    question = #{question},
                </if>
                <if test="answer != null">
                    answer = #{answer},
                </if>
                <if test="state != null">
                    state = #{state},
                </if>
            </set>
        where secq_id = #{secq_id}
    </update>

    <select id="getUserSecQuestion" resultMap="secQuestion">
        select s.user_id,u.user_name,
               s.secq_id,s.question,
               s.answer,s.createtime,
               s.state
        from tb_user_secquestion s
            left join tb_user u on u.user_id = s.user_id
        where s.user_id = #{userId} and s.state = '1'
    </select>

    <select id="getUserSecQuestionByUsername" resultMap="secQuestion">
        select s.user_id,u.user_name,'' answer,
               s.secq_id,s.question,s.createtime,
               s.state
        from tb_user_secquestion s
            left join tb_user u on u.user_id = s.user_id
        where u.user_name = #{user_name} and s.state = '1'
    </select>

    <select id="chickAnswer" resultType="int">
        select count(*)
        from tb_user_secquestion
        where secq_id = #{secq_id} and answer = #{answer}
    </select>


    <resultMap id="secQuestion" type="com.example.mydream_back.dto.SecurityQuestion">
        <result property="user.user_id" column="user_id"/>
        <result property="user.user_name" column="user_name"/>
        <result property="secq_id" column="secq_id"/>
        <result property="question" column="question"/>
        <result property="answer" column="answer"/>
        <result property="createtime" column="createtime"/>
        <result property="state" column="state"/>
    </resultMap>

    <insert id="addUserStatus" parameterType="com.example.mydream_back.dto.UserInfo">
        insert into tb_user_status (user_id,user_status,status_time) values (#{user.user_id},#{user_status_code},#{last_sign_in_date});
    </insert>

    <update id="updateUserStatus" parameterType="com.example.mydream_back.dto.UserInfo">
        update tb_user_status s set s.user_status = #{user_status_code},s.status_time = #{last_sign_in_date}
        where s.user_id = #{user.user_id}
    </update>

</mapper>